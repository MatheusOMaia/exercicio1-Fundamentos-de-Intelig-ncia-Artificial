import streamlit as st
import google.generativeai as genai

chave = st.secrets["chave"]
# Configura a API key do Gemini corretamente para a vers√£o instalada
genai.configure(api_key= chave)

model = genai.GenerativeModel("gemini-2.0-flash")

def gerar_resposta_gemini(prompt):
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        return f"Erro ao gerar resposta: {str(e)}"


# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Minha App", page_icon="üöÄ")


st.header("Exerc√≠cio IA 1 - Criador de Hist√≥rias Interativas com IA üìö")

# Interface para o usu√°rio
nome = st.text_input("Qual o nome do protagonista?")
generoliterario = st.selectbox("Qual o g√™nero liter√°rio da hist√≥ria?", ["Fantasia", "Fic√ß√£o Cient√≠fica", "Mist√©rio", "Aventura"])
localInicial = st.radio("Onde esta aventura ir√° come√ßar?",["Uma floresta antiga", "Uma cidade futurista", "Um castelo assombrado", "Uma nave espacial √† deriva"])
frasextra = st.text_input("Adiciona uma frase adicional que ser√° inserida na hist√≥ria:", placeholder=("E de repente, tudo ficou escuro, O mapa indicava um perigo iminente."))
                     


if st.button("Gerar Sugest√£o de hist√≥ria"):
    if not nome:
        st.warning("Por favor, informe o nome do protagonista")
    elif not generoliterario:
        st.warning("Insira o genero liter√°rio da hist√≥ria")
    elif not localInicial:
        st.warning("Insira onde a jornada deve iniciar")
    else:
        if frasextra:
            prompt_aluno = (
                f"Crie o in√≠cio de uma hist√≥ria de {generoliterario} com o protagonista chamado {nome}.A hist√≥ria come√ßa em {localInicial}.Incorpore a seguinte frase ou desafio no in√≠cio: {frasextra}."
            )
        else:
            prompt_aluno = (f"Crie o in√≠cio de uma hist√≥ria de {generoliterario}com o protagonista chamado {nome}.A hist√≥ria come√ßa em {localInicial}.")

        st.markdown("---")
        st.markdown("‚öôÔ∏è **Prompt que ser√° enviado para a IA (para fins de aprendizado):**")
        st.text_area("",prompt_aluno, height=250)
        st.markdown("---")

        st.info("Aguarde, a IA est√° montando sua hist√≥ria dos sonhos...")
        resposta_ia = gerar_resposta_gemini(prompt_aluno)

        if resposta_ia:
            st.markdown("### ‚ú® Sugest√£o de hist√≥ria da IA:")
            st.markdown(resposta_ia)
        else:
            st.error("N√£o foi poss√≠vel gerar a hist√≥ria. Verifique as mensagens acima ou tente novamente mais tarde.")

st.header("Exerc√≠cio IA 2 - Gerador de Receitas Culin√°rias Personalizadas com IA üßë‚Äçüç≥")

ingredientes = st.text_area("Digite os ingredientes principais da receita:")
culinariaOpcoes = ["Italiana", "Brasileira", "Asi√°tica", "Mexicana", "Qualquer uma"]
culinaria = st.selectbox("Qual o tipo de culin√°ria dessa receita?", culinariaOpcoes,index=4)
dificuldade = st.slider("Qual a dificuldade desejada para a receita? 1 - Muito F√°cil ... 5 - Muito Dif√≠cil", 1, 5)
restricao = st.checkbox("Possui restri√ß√£o alimentar?")
if restricao:
    restricaoEspecifica = st.text_area("Diga quais restri√ß√µes alimentares voc√™ possui:",placeholder=("sem gl√∫ten, vegetariana, sem lactose"))

if st.button("Gerar Sugest√£o de receita"):
    if not ingredientes:
        st.warning("Por favor, informe os ingredientes necess√°rios para a receita")
    else:
        if restricao:
            prompt_aluno = (f"Sugira uma receita {culinaria} com n√≠vel de dificuldade {dificuldade} (sendo 1 muito f√°cil e 5 desafiador). Deve usar principalmente os seguintes ingredientes: {ingredientes}, com exce√ß√£o dos {restricaoEspecifica}.  Apresente o nome da receita e uma lista de ingredientes adicionais se necess√°rio, e um breve passo a passo.")
        else:
            prompt_aluno = (f"Sugira uma receita {culinaria} com n√≠vel de dificuldade {dificuldade} (sendo 1 muito f√°cil e 5 desafiador). Deve usar principalmente os seguintes ingredientes: {ingredientes}. Apresente o nome da receita e uma lista de ingredientes adicionais se necess√°rio, e um breve passo a passo.")

        st.markdown("---")
        st.markdown("‚öôÔ∏è **Prompt que ser√° enviado para a IA (para fins de aprendizado):**")
        st.text_area("",prompt_aluno, height=250)
        st.markdown("---")

        st.info("Aguarde, a IA est√° montando sua receita dos sonhos...")
        resposta_ia = gerar_resposta_gemini(prompt_aluno)

        if resposta_ia:
            st.markdown("### ‚ú® Sugest√£o de receita da IA:")
            st.markdown(resposta_ia)
        else:
            st.error("N√£o foi poss√≠vel gerar a receita. Verifique as mensagens acima ou tente novamente mais tarde.")